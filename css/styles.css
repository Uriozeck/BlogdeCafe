:root {
    --fuenteHeading: 'PT Sans', sans-serif;
    --fuenteParrafo: 'Open Sans', sans-serif;

    --primario: #784d3c;
    --gris: #e1e1e1;
    --blanco: #ffffff;
    --negro: #000000;
}

html {
    box-sizing: border-box;
    font-size: 62.5%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    font-family: var(--blanco);
    font-size: 1.6rem;
    line-height: 2;
}

/* Globales */

.contenedor {
    /* max-width: 120rem;
    width: 90%; */
    width: min(90%, 120rem);
    /*este toma dos valores, siempre y cuando uno sea el menor haciendo que se reemplace la linea del max-width y el width por esta propiedad*/
    margin: 0 auto;
}

a {
    text-decoration: none;
}

h1,
h2,
h3,
h4 {
    font-family: var(--fuenteHeading);
    line-height: 1.2;
}

h1 {
    font-size: 4.8rem;
}

h2 {
    font-size: 4rem;
}

h3 {
    font-size: 3.2rem;
}

h4 {
    font-size: 2.8rem;
}

img {
    max-width: 100%;
}

/* Utilidades */

.no-margin {
    margin: 0;
}

.no-padding {
    padding: 0;
}

.centrar-texto {
    text-align: center;
}

/* Header */
/*Se descarga primero la librería normalizr despues se reviza en el navegador si este soporta webp una vez inspeccionando el código frente al código o en el head. despues se coloca el nombre de la clase .webp y la etiqueta o selector que tenga la imagen de fondo y por ultimo se indica que se muestre la imagen webp en caso que no se soporte se agrega la clase no-webp y se coloca la imagen jpg*/
.webp .header {
    background-image: url(../img/banner.webp);
}
.no-webp .header {
    background-image: url(../img/banner.jpg);
}
.header {
    /* background-image: url(../img/banner.jpg); */
    height: 60rem;
    background-size: cover;
    /*hace que el fondo se expanda*/
    background-repeat: no-repeat;
    /*Hace que el fondo no se repita*/
    background-position: center center;
    /*Alinea el fondo al centro de forma horizontal y vuelve alinear al centro de forma vertical */
}

.header__texto {
    text-align: center;
    color: var(--blanco);
    margin-top: 5rem;
}

.barra {
    padding-top: 3rem;
}

@media (min-width: 768px) {
    .header__texto {
        margin-top: 15rem;
    }

    .barra {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
}

.logo {
    color: var(--blanco);
}

.logo__nombre {
    font-weight: 400;
}

.logo__bold {
    font-weight: 700;
}

@media (min-width: 768px) {
    .navegacion {
        display: flex;
        gap: 2rem;
    }
}

.navegacion__enlace {
    display: block;
    text-align: center;
    font-size: 1.8rem;
    color: var(--blanco);
}

@media (min-width: 768px) {
    .contenido-principal {
        display: grid;
        grid-template-columns: 2fr 1fr;
        column-gap: 4rem;
    }
}

.entrada {
    border-bottom: 1px solid var(--gris);
    margin-bottom: 2rem;
}

.entrada:last-of-type {
    /*En este selector se indica que el ultimo del tipo .entrada no va a tener los mismos estilos que sus hermanos anteriores*/
    border: none;
    margin-bottom: 0;
}

.boton {
    display: block;
    font-family: var(--fuenteHeading);
    color: var(--blanco);
    text-align: center;
    padding: 1rem 3rem;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;

    border: none;
    cursor: pointer;
}

@media (min-width: 768px) {
    .boton {
        /*display: inline; display: inline tiene un problema, debido a que si se le agrega un width o un margin top o bottom será inmune, en resumen no le hará caso, para solucionar esto se tiene que agregar un display: inline-block*/
        display: inline-block;
    }
}

.boton--primario {
    background-color: var(--negro);
}

.boton--secundario {
    background-color: var(--primario);
}

.cursos {
    list-style: none;
}

.widget-curso {
    border-bottom: 1px solid var(--gris);
    margin-bottom: 2rem;
}

.widget-curso:last-of-type {
    border: none;
    margin-bottom: 0;
}

.widget-curso__label {
    font-family: var(--fuenteHeading);
    font-weight: bold;
}

.widget-curso__info {
    font-weight: normal;
}

.widget-curso__label,
.widget-curso__info {
    font-size: 2rem;
}

/* footer */

.footer {
    background-color: var(--negro);
    padding-bottom: 3rem;
    margin-top: 2rem;
}

/* Sobre nosotros */

@media (min-width: 768px) {

    /* Alineaar dos columnas con flexbox */
    .sobre-nosotros {
        display: flex;
        /* gap: 2rem; */
        justify-content: space-between;
        /* Esta porpiedad da soporte a flex-basis: calc(50% - 1rem); y a flex: 0 0 calc(50% - 1rem); haciendo que se coloque una separación entre columnas. sin esta propiedad no se agrega la separacion de las columns*/
    }

    .sobre-nosotros__imagen,
    .sobre-nosotros__texto {
        /* flex-basis: 50%; */
        /* flex-basis: calc(50% - 1rem); */
        /* Separa las columnas en dos dandole un 50% a cada una pero le resta 1rem el cual será la separación entre cada columna, pero la separación no se va a agregar sin la propiedad de justify-content: space-between; la cual se coloca un nivel antes o en el padre de las columnas*/
    }

    /* Factor de crecimieto Flex */
    /* El factor de crecimiento se determina en cada columna. Cuando se habilita flex: se indica cual será el factor de crecimiento con un numero el cual indicará que la columna crecerá el numero que se le asigne p, ej. Flex: 1; aquí se indica que esta columna va a crecer un pixel, y si se le coloca a otra columna lo siguiente: flex: 2, esto indica que esta otra columna va a crecer dos pixeles osea un pixel más que la anterior, el problema que se tiene con esta sintaxis es que no se agrega ningun espacio y si se utiliza gap, aun no se soporta en todos los navegadores*/

    .sobre-nosotros__imagen {
        /*flex: 2;
        esta columna tiene un factor de crecimiento de dos pixeles*/
        flex: 0 0 calc(50% - 1rem) /* funciona similar a flex-basis: solamente que en esta forma se indica que el valor de crecimiento es 0, su valor de encogimiento es 0 y con el calculo se indica que al 50% se le resta 1 rem haciendo que este rem sea la separación entre columnas, igual se tiene que indicar lo mismo en la segunda columna y por ultimo tambien necesita que el el padre se coloque la propiedad justify-content: space-between;*/
    }

    .sobre-nosotros__texto {
        /*flex: 1;
        esta columna tiene un factor de crecimiento de un pixel*/
        flex: 0 0 calc(50% - 1rem)
    }

    /* la ultima forma para dividr columnas en dos es agregarle a cada una un width del 50% y la separaci+on en el padre */
    .sobre-nosotros__imagen, 
    .sobre-nosotros__texto {
        width: 50%;
    }

    /* Alinear dos columnas con grid */
    /* .sobre-nosotros {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 2rem;
    } */
}

/* Cursos */

.curso {
    padding: 3rem 0;
    border-bottom: 1px solid var(--gris);
}
@media (min-width: 768px) {
    .curso {
        display: grid;
        grid-template-columns: 1fr 2fr;
        column-gap: 2rem;
    }
}
.curso:last-of-type {
    border-bottom: none;
}
/* E esta parte se está haciendo duplicidad de código ya que esto es lo mismo que la parte de los widget, pero para efectos de esta clase se realizó de esta manera */
.curso__label {
    font-family: var(--fuenteHeading);
    font-weight: bold;
}
.curso__info {
    font-weight: normal;
}
.curso__label,
.curso__info {
    font-size: 2rem;
}

/* Contacto */

.contacto-background {
    background-image: url(../img/contacto.jpg);
    height: 40rem;
    background-size: cover;
    background-repeat: no-repeat;
}

/* Contacto */

.formulario {
    background-color: var(--blanco);
    margin: -5rem auto 0 auto;
    width: 95%;
    padding: 5rem;
}
.campo {
    display: flex;
    margin-bottom: 2rem;
}
.campo__label {
    flex: 0 0 9rem;
    text-align: right;
    padding-right: 2rem;
}
.campo__field {
    flex: 1;
    border: 1px solid var(--gris);
}
.campo__field--textarea {
    height: 20rem;
}